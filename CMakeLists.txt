# cmake_minimum_required(VERSION 2.8)
# project( ImageMatch )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( ImageMatch imageMatching.cpp util.cpp)
# target_link_libraries( ImageMatch ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( HistMatch )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( HistMatch histMatching.cpp csv_util/csv_util.cpp)
# target_link_libraries( HistMatch ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( CSVHistMatch )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( CSVHistMatch histMatchingSaveCsv.cpp csv_util/csv_util.cpp util.cpp)
# target_link_libraries( CSVHistMatch ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( MultiHistMatch )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( MultiHistMatch multiHistMatching.cpp csv_util/csv_util.cpp)
# target_link_libraries( MultiHistMatch ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( TextureHist )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( TextureHist textureHist.cpp csv_util/csv_util.cpp util.cpp)
# target_link_libraries( TextureHist ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( DNN )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( DNN dNNEmbedding.cpp csv_util/csv_util.cpp util.cpp)
# target_link_libraries( DNN ${OpenCV_LIBS} Boost::filesystem Boost::system )

cmake_minimum_required(VERSION 2.8)
project( LawsFilter )
find_package( OpenCV REQUIRED )
include_directories( ${OpenCV_INCLUDE_DIRS} )
find_package(Boost REQUIRED COMPONENTS filesystem system)
include_directories(${Boost_INCLUDE_DIRS})
add_executable( LawsFilter LawsFilter.cpp csv_util/csv_util.cpp util.cpp)
target_link_libraries( LawsFilter ${OpenCV_LIBS} Boost::filesystem Boost::system )

# cmake_minimum_required(VERSION 2.8)
# project( Custom )
# find_package( OpenCV REQUIRED )
# include_directories( ${OpenCV_INCLUDE_DIRS} )
# find_package(Boost REQUIRED COMPONENTS filesystem system)
# include_directories(${Boost_INCLUDE_DIRS})
# add_executable( Custom customDesign.cpp csv_util/csv_util.cpp util.cpp)
# target_link_libraries( Custom ${OpenCV_LIBS} Boost::filesystem Boost::system )